# // Auto-generated , DO NOT EDIT
specVersion: 1.0.0
version: 1.0.0
name: Ternoa Indexer
description: 'Ternoa Indexer: Indexes main events triggered by the Ternoa blockchain'
runner:
  node:
    name: '@subql/node'
    version: '>=3.0.1'
  query:
    name: '@subql/query'
    version: '*'
schema:
  file: ./schema.graphql
network:
  chainId: '0x18bcdb75a0bba577b084878db2dc2546eb21504eaad4b564bb7d47f9d02b6ace'
  endpoint:
    - 'wss://alphanet.ternoa.com'
  dictionary:
    - 'https://dictionary-alphanet.ternoa.dev'
dataSources:
  - kind: substrate/Runtime
    startBlock: 1
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: accountUpdateHandler
          kind: substrate/CallHandler
          filter:
            module: utility
            method: batchAll
            success: true
        - handler: accountUpdateHandler
          kind: substrate/CallHandler
          filter:
            module: utility
            method: batch
        - handler: accountUpdateHandler
          kind: substrate/CallHandler
          filter:
            module: utility
            method: forceBatch
        - handler: accountUpdateHandler
          kind: substrate/CallHandler
          filter:
            module: staking
            method: payoutStakers
            success: true
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: BalanceSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Deposit
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: DustLost
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Endowed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Reserved
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Slashed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Unreserved
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Withdraw
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Transfer
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: transactionPayment
            method: TransactionFeePaid
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTBurned
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTTransferred
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTDelegated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTRoyaltySet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: NFTListed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: NFTUnlisted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: NFTSold
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTAddedToCollection
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: SecretAddedToNFT
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: SecretNFTSynced
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTConvertedToCapsule
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleOffchainDataSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleSynced
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleReverted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleKeyUpdateNotified
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: transmissionProtocols
            method: ProtocolSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: transmissionProtocols
            method: ProtocolRemoved
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: transmissionProtocols
            method: TimerReset
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: transmissionProtocols
            method: ConsentAdded
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: transmissionProtocols
            method: ThresholdReached
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: transmissionProtocols
            method: Transmitted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionBurned
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionClosed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionLimited
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionOffchainDataSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceOwnerSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceKindSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceConfigSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceMintFeeSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractCanceled
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractStarted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractRevoked
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractOfferCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractOfferRetracted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractSubscriptionTermsChanged
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractSubscriptionTermsAccepted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractEnded
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractSubscriptionPeriodStarted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractExpired
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: AuctionCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: AuctionCancelled
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: AuctionCompleted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: BidAdded
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: BidRemoved
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: BalanceClaimed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: associatedAccounts
            method: UserAccountAdded
